<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.trip.plan.mapper.PlanMapper">

    <!-- 해당 plan의 선택한 여행지 목록 -->
    <select id="listPlace" resultType="PlaceDto">
        SELECT spot_id as spotId, plan_id as planId, visit_order as visitOrder
        from trip.place
        WHERE plan_id = #{planId}
    </select>

    <!-- 해당 plan의 여행지 선택 -->
    <insert id="selectPlace" parameterType="placeDto">
        INSERT INTO trip.place (spot_id, plan_id, visit_order)
        VALUES (#{spotId}, #{planId}, #{visitOrder})
    </insert>

    <!-- 해당 plan의 선택한 여행지 삭제 -->
    <delete id="deletePlace" parameterType="int">
        DELETE FROM trip.place
        WHERE plan_id = #{planId} AND spot_id = #{spotId}
    </delete>

    <!-- 해당 plan의 선택한 여행지 순서 수정 -->
    <update id="modifyOrder" parameterType="PlaceDto">
        UPDATE trip.place
        SET visit_order = #{visitOrder}
        WHERE spot_id = #{spotId} AND plan_id = #{planId}
    </update>

    <!-- plan 생성 -->
    <insert id="insertPlan" parameterType="planDto" useGeneratedKeys="true" keyProperty="planId">
        INSERT INTO trip.plan (user_id, plan_at, trip_at)
        VALUES (#{userId}, now(), #{tripAt})
    </insert>

    <!-- plan 삭제 -->
    <insert id="deletePlan" parameterType="planDto">
        DELETE FROM trip.plan
        WHERE plan_id = #{planId}
    </insert>

    <!-- plan 검색 -->
    <select id="searchPlans" parameterType="String" resultType="PlanDto">
        SELECT DISTINCT p.plan_id as planId, p.user_id as userId, p.plan_at as planAt, p.trip_at as tripAt
        FROM plan p
                 JOIN place pl ON p.plan_id = pl.plan_id
                 JOIN spot s ON pl.spot_id = s.spot_id
        WHERE MATCH(s.title, s.addr1, s.addr2) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE)
           OR MATCH(p.plan_id, p.user_id) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE)
    </select>

</mapper>